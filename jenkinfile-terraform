pipeline {
    agent any

    parameters {
        choice(name: 'Action', choices: ['apply', 'destroy'], description: 'Terraform Action')
    }

    stages {
        stage('Git Clone') {
            steps {
                git branch: 'main', url: 'https://github.com/pjyoti1395/hotstar-clone-app-ci-cd-k8'
            }
        }

        stage('Terraform Version Check') {
            steps {
                sh 'terraform --version'
            }
        }

        stage('Terraform Initialize') {
            steps {
                dir('EKS_TERRAFORM') {
                    sh 'terraform init -reconfigure'
                }
            }
        }

        stage('Terraform Validate') {
            steps {
                dir('EKS_TERRAFORM') {
                    sh 'terraform validate'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir('EKS_TERRAFORM') {
                    sh 'terraform plan'
                }
            }
        }

        stage('Terraform Apply') {
            steps {
            dir('EKS_TERRAFORM') {
                sh '''
                    echo "üîÅ Updating kubeconfig to connect to EKS..."
                    aws eks update-kubeconfig --region us-east-1 --name EKS_CLOUD
    
                    echo "üßπ Deleting existing aws-auth configmap to avoid duplicate error..."
                    kubectl delete configmap aws-auth -n kube-system || echo "No existing aws-auth to delete"
    
                    echo "üöÄ Applying Terraform changes..."
                    terraform apply --auto-approve
                '''
            }
    }
}
